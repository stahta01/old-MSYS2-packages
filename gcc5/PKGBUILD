# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Martell Malone <martellmalone@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

# toolchain build order: win32-api-headers->msys2-runtime->binutils->gcc->binutils->msys2-runtime
# NOTE: libtool requires rebuilt with each new gcc version

pkgbase=gcc
pkgname=('gcc' 'gcc-libs' 'gcc-fortran')
pkgver=5.3.0
pkgrel=4
pkgdesc="The GNU Compiler Collection"
arch=('i686' 'x86_64')
groups=('msys2-devel')
license=('GPL' 'LGPL' 'FDL' 'custom')
url="http://gcc.gnu.org"
makedepends=('binutils' 'mpc-devel' 'gmp-devel'
             'mpfr-devel' 'isl-devel' 'zlib-devel'
             'windows-default-manifest' 'texinfo')
STRIP_OPTION="strip"
#STRIP_OPTION="!strip"
#DEBUG_OPTION="debug"
DEBUG_OPTION="!debug"
options=('!emptydirs' "$STRIP_OPTION" "$DEBUG_OPTION")
_sourcedir=gcc-${pkgver}
ISL_VERSION=0.16.1
noextract=("isl-${ISL_VERSION}.tar.bz2")
source=(ftp://gcc.gnu.org/pub/gcc/releases/gcc-${pkgver}/gcc-${pkgver}.tar.bz2
        https://libisl.sourceforge.io/isl-${ISL_VERSION}.tar.bz2
        isl-0.12.1-msys2.patch
        isl-0.14.1-no-undefined.patch
        0001-share-mingw-fset-stack-executable-with-cygwin.patch
        0002-boehm-gc-for-cygwin.patch
        0003-AWT-Font-fix-for-Cygwin.patch
        0004-Cygwin-ioctl-may-emit-EINVAL.patch
        0005-use-avoid-version-if-not-tracking-SO-version.patch
        0006-cygwin-uses-cyg-library-prefix.patch
        0007-Avoid-installing-libffi.patch
        0009-Cygwin-uses-sysv-ABI-on-x86_64.patch
        0010-Do-not-version-lto-plugin-on-cygwin-mingw.patch
        0011-add-dummy-pthread-tsaware-and-large-address-aware-fo.patch
        0012-handle-dllimport-properly-in-medium-model.patch
        0013-skip-test-for-cygwin-mingw.patch
        0014-64bit-Cygwin-uses-SEH.patch
        0015-define-RTS_CONTROL_ENABLE-and-DTR_CONTROL_ENABLE-for.patch
        0016-fix-some-implicit-declaration-warnings.patch
        0017-__cxa-atexit-for-Cygwin.patch
        0018-prevent-modules-from-being-unloaded-before-their-dto.patch
        0019-Cygwin-doesn-t-do-text-mode-translations-for-file-ha.patch
        0020-cygwin-uses-cyg-lib-prefix.patch
        0021-search-usr-lib-w32api-explicitly.patch
        0022-libgomp-soname-cygwin-mingw.patch
        0023-glibcxx-use-c99.patch
        0024-libitm-weak-symbols.patch
        0025-enable-libcilkrts.patch
        0026-g++-gnu-source.patch
        0027-link-w32api.patch
        0901-gcc-4.0-cfns-fix-mismatch-in-gnu_inline-attributes.patch
        0950-5.2.0-configure-msys2.patch
        0951-5.2.0-msys2-spec.patch
        0953-5.2.0-testsuite-msys2.patch
        0955-4.9.2-apply-hack-so-gcc_s-isnt-stripped.patch)
sha256sums=('b84f5592e9218b73dbae612b5253035a7b34a9a1f7688d2e1bfaaf7267d5c4db'
            '412538bb65c799ac98e17e8cfcdacbb257a57362acfaaff254b0fcae970126d2'
            'cd29dc28cc9905b15d18ca0de66752c0587cd06485115b9892ea53ec39c59d35'
            '83655a7202f0a0dcce1782d4b365252bf1ad12a522b7ad82ab578ee5ec46433b'
            'e2f984af582f15bfc3618ae9e428518a67b32749cf6de198b48e9d0534eb278a'
            '52b1725a7710040cde2d418d1374eb84dcc5cc0a0ef26c9038b17c0a811392fd'
            '6d15fe75fa6e865cde0334f89953daa76ef40c2c6d767e5880bd810470c1aac7'
            'facb6fb633cc6c8bc83af0b138798a6de8bee036be7ee1460330475ac57d63c1'
            '128b5288dd7c7aa0107ff6c0e76b3b9dfb30194f30b631c3433721220e92eace'
            'e199a6f5b6b5a018e323b75919ed9e29f2399752d9de94d166c2e8014492ba26'
            'a3a01a9a6abdd769ae5c92bd1b8522b728d475397543863db98ae8044c8792d0'
            '73f44d4343e7e9b0029373784a397f1e063e3802f56bb2dbc0dc2e4e9a3e0537'
            '4beb483671c9ee7f0149f0655433568662f0ff450d5140d14e3ef2874d0166a4'
            '7ad412357429a2e2376ec673d0e0a0d2ab4e3a162db532818bc76d55835f35d6'
            '5b33a86b8fd2ea98d8ad73dc61d6619bb9e006d5a3ddca4769cec9bca2293d32'
            '79db6a8951c3c07d9df26863a2bcfc607606211f6eb813c156b4f46123ecbbdc'
            'ac7e9e08ea8b2b4b5fdb394e217ce9081352fe07746e19b9374a753ebf89a4a2'
            '84c8127f2e70f26a6bf0f7ff1fe06df4814096bc02f5fc19291a729c740887d7'
            '4d3030238181a6d28c1aff5e5b43db6d82517f3412309175e162f5da63f7cd00'
            '0e6a373a0911d81656d9bfd2d93085b817266538600eab14965f1bafb034bac8'
            'a277245cf7ccf6e3bd83a79945ff26ea5e41fb3ecf7fe0a473b2ec64d8c5b101'
            '54a0e45c09ac70b7932cde3e86b6156c1fec459c69ece53141921adcb8a75e6e'
            '11b1b1660723dc880e034ad7e26e5e852e88e27bc6fd17c663a5fbc072c16374'
            'e0c7f71ad3ce4a060c2b2bd3c94d9352393a700173bd5a1d534044092be88daa'
            '00e528e198183799c00167cacc1a7b1cb9505ae93ef89e581632ffaae20080f2'
            'b68848b7ad50b865e6ab2118f2cf25d3d9d002fdbf251e78002df66cd7090660'
            'f748b4be4bb3b4645f07cc2fa490ba6723f2e19cb09dd9f779816850b953ae4a'
            'c1b6ff3747e2ad2f2d7b052d48c3a0ccfab58a4141f9c90d0e49a9441d25280f'
            'cbad1b7866c351f65e188bd2e8dccc2448c0ce82be01008ac081f3271d707dd9'
            'c1a0172e24ed45fba1c0bf11deb6a0301e959abd258179d07cdb378837784393'
            'e0442e147448bd725d39bb8ce82b8e939ccc5b33b228388b43138022f1452b4c'
            '7440974e7a3a9f07da6e1c2b26cbb49f0ec34426079d9a9c7436258695c85a84'
            '64c021dc7d32ae1b06825baff3fc646d9050c20790e4b05ccaf12eab8c4bcc12'
            '5984dcfa19906d1964367f3c8dd6be2253b88b8c172c67db3df712702836d308'
            'd033071ab49b0873fa2a1cf3ffbc2bd897ef0d94d68d1e87bc1a97efd22afaed')
# =========================================== #
_extract_to_gcc_folder() {
    local tarfile="$1"
    local subfolder="$(echo "$tarfile" | sed 's/-.*$//')"
    if [ ! -d  "$_sourcedir/$subfolder" ]; then
        echo "Extracting ${tarfile} to $_sourcedir/$subfolder"
        mkdir -p "$_sourcedir/$subfolder"
        tar -x --strip-components=1 -f "$tarfile" -C "$_sourcedir/$subfolder"
    else
        echo "Folder $_sourcedir/$subfolder already exists"
    fi
}
# =========================================== #
prepare() {
  cd ${srcdir}

  _extract_to_gcc_folder          isl-${ISL_VERSION}.tar.bz2

  cd ${srcdir}/gcc-${pkgver}/isl

  patch -p1 -i ${srcdir}/isl-0.12.1-msys2.patch
  patch -p1 -i ${srcdir}/isl-0.14.1-no-undefined.patch

  autoreconf -fi

  cd ${srcdir}/gcc-${pkgver}
  
  # Remove files created by patches
  rm -f gcc/ada/system-cygwin-x86_64.ads libgcc/config/i386/t-msys \
        gcc/config/i386/msys.h gcc/config/i386/msys-w64.h \
        gcc/config/i386/t-msys-w64 \
          > /dev/null 2>&1 | true

  # Cygwin patches
  patch -p1 -i ${srcdir}/0001-share-mingw-fset-stack-executable-with-cygwin.patch
  patch -p1 -i ${srcdir}/0002-boehm-gc-for-cygwin.patch
  patch -p1 -i ${srcdir}/0003-AWT-Font-fix-for-Cygwin.patch
  patch -p1 -i ${srcdir}/0004-Cygwin-ioctl-may-emit-EINVAL.patch
  patch -p1 -i ${srcdir}/0005-use-avoid-version-if-not-tracking-SO-version.patch
  patch -p1 -i ${srcdir}/0006-cygwin-uses-cyg-library-prefix.patch
  patch -p1 -i ${srcdir}/0007-Avoid-installing-libffi.patch
  patch -p1 -i ${srcdir}/0009-Cygwin-uses-sysv-ABI-on-x86_64.patch
  patch -p1 -i ${srcdir}/0010-Do-not-version-lto-plugin-on-cygwin-mingw.patch
  patch -p1 -i ${srcdir}/0011-add-dummy-pthread-tsaware-and-large-address-aware-fo.patch
  patch -p1 -i ${srcdir}/0012-handle-dllimport-properly-in-medium-model.patch
  patch -p1 -i ${srcdir}/0013-skip-test-for-cygwin-mingw.patch
  patch -p1 -i ${srcdir}/0014-64bit-Cygwin-uses-SEH.patch
  patch -p1 -i ${srcdir}/0015-define-RTS_CONTROL_ENABLE-and-DTR_CONTROL_ENABLE-for.patch
  patch -p1 -i ${srcdir}/0016-fix-some-implicit-declaration-warnings.patch
  patch -p1 -i ${srcdir}/0017-__cxa-atexit-for-Cygwin.patch
  patch -p1 -i ${srcdir}/0018-prevent-modules-from-being-unloaded-before-their-dto.patch
  patch -p1 -i ${srcdir}/0019-Cygwin-doesn-t-do-text-mode-translations-for-file-ha.patch
  patch -p1 -i ${srcdir}/0020-cygwin-uses-cyg-lib-prefix.patch
  patch -p1 -i ${srcdir}/0021-search-usr-lib-w32api-explicitly.patch
  patch -p1 -i ${srcdir}/0022-libgomp-soname-cygwin-mingw.patch
  patch -p1 -i ${srcdir}/0023-glibcxx-use-c99.patch
  patch -p1 -i ${srcdir}/0024-libitm-weak-symbols.patch
  patch -p1 -i ${srcdir}/0025-enable-libcilkrts.patch
  patch -p1 -i ${srcdir}/0026-g++-gnu-source.patch
  patch -p1 -i ${srcdir}/0027-link-w32api.patch

  # newer build GCC syntax errors
  patch -p1 -i ${srcdir}/0901-gcc-4.0-cfns-fix-mismatch-in-gnu_inline-attributes.patch

  # MSYS2 Patches
  patch -p1 -i ${srcdir}/0950-5.2.0-configure-msys2.patch
  patch -p1 -i ${srcdir}/0951-5.2.0-msys2-spec.patch
  patch -p1 -i ${srcdir}/0953-5.2.0-testsuite-msys2.patch
  patch -p1 -i ${srcdir}/0955-4.9.2-apply-hack-so-gcc_s-isnt-stripped.patch

  # Do not run fixincludes
  #sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in
  echo ${pkgver} > gcc/BASE-VER
  # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure
  
  [[ -d ${srcdir}/build-$(arch) ]] && rm -rf ${srcdir}/build-$(arch)
  mkdir ${srcdir}/build-$(arch)
}

build() {
  cd ${srcdir}/build-$(arch)

  case ${CARCH} in
    i686)
      _arch=i686
      _arch_conf="--disable-sjlj-exceptions"
    ;;
    x86_64)
      _arch=x86-64
      _arch_conf=
    ;;
  esac

  # libgcc is built with -g0, but INHIBIT_LIBC_CFLAGS can
  # be used to undo that.
  if check_option "debug" "y"; then
    export INHIBIT_LIBC_CFLAGS="-g2"
  fi

  # using -pipe causes spurious test-suite failures
  # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=48565
  CFLAGS=${CFLAGS/-pipe/}
  CXXFLAGS=${CXXFLAGS/-pipe/}

  ${srcdir}/gcc-${pkgver}/configure \
    --build=${CHOST} \
    --prefix=/usr \
    --libexecdir=/usr/lib \
    --enable-bootstrap \
    --enable-shared --enable-shared-libgcc --enable-static \
    --enable-version-specific-runtime-libs \
    --with-arch=${_arch} \
    --with-tune=generic \
    --disable-multilib \
    ${_arch_conf} \
    --enable-__cxa_atexit \
    --with-dwarf2 \
    --enable-languages=c,c++,fortran,lto \
    --enable-graphite \
    --enable-threads=posix \
    --enable-libatomic \
    --enable-libcilkrts \
    --enable-libgomp \
    --enable-libitm \
    --enable-libquadmath \
    --enable-libquadmath-support \
    --enable-libssp \
    --disable-win32-registry \
    --disable-symvers \
    --with-gnu-ld \
    --with-gnu-as \
    --disable-isl-version-check \
    --enable-checking=release \
    --without-libiconv-prefix \
    --without-libintl-prefix \
    --with-system-zlib \
    --enable-linker-build-id \
    --with-default-libstdcxx-abi=gcc4-compatible

  make

  # make documentation
  #cd $CHOST/libstdc++-v3
  #make doc-man-doxygen
}

check() {
  cd ${srcdir}/build-$(arch)

  # do not abort on error as some are "expected"
  make -k check || true
  ${srcdir}/gcc-${pkgver}/contrib/test_summary
}

package_gcc-libs()
{
  pkgdesc="Runtime libraries shipped by GCC"
  groups=('base')
  depends=('msys2-runtime')
  install=gcc-libs.install

  cd ${srcdir}/build-$(arch)
  make -j1 -C $CHOST/libgcc DESTDIR=${pkgdir} install-shared
  for lib in libgomp libstdc++-v3/src; do
    make -j1 -C $CHOST/$lib DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  done

  make -j1 -C $CHOST/libstdc++-v3/po DESTDIR=${pkgdir} install
  make -j1 -C $CHOST/libgomp DESTDIR=${pkgdir} install-info
  make -j1 -C $CHOST/libquadmath DESTDIR=${pkgdir} install-info

  make -j1 DESTDIR=${pkgdir} install-target-libquadmath
  make -j1 DESTDIR=${pkgdir} install-target-libgfortran
  make -j1 DESTDIR=${pkgdir} install-target-libssp
  make -j1 DESTDIR=${pkgdir} install-target-libatomic
  make -j1 DESTDIR=${pkgdir} install-target-libcilkrts
  make -j1 DESTDIR=${pkgdir} install-target-libvtv

  rm -f ${pkgdir}/*.dll
  rm -rf ${pkgdir}/usr/lib/
  rm -rf ${pkgdir}/usr/share/gcc-${pkgver}

  # remove static libraries
  #find ${pkgdir} -name *.a -delete

  # Install Runtime Library Exception
  install -Dm644 ${srcdir}/gcc-${pkgver}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc()
{
  pkgdesc="The GNU Compiler Collection - C and C++ frontends"
  depends=("gcc-libs=${pkgver}-${pkgrel}" 'binutils' 'gmp' 'isl' 'mpc' 'mpfr' 'msys2-runtime-devel' 'msys2-w32api-headers' 'msys2-w32api-runtime' 'windows-default-manifest')
  options=('staticlibs' "$STRIP_OPTION" "$DEBUG_OPTION")
  install=gcc.install

  cd ${srcdir}/build-$(arch)

  if check_option "strip" "n"; then
    export STRIP=true
  fi

  make -j1 DESTDIR=${pkgdir} install
  if [ "$CARCH" = "x86_64" ]
  then
    mv ${pkgdir}/usr/lib/gcc/${CHOST}/lib/libgcc_s.dll.a ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver/-*/.*}/
    rm -rf ${pkgdir}/usr/lib/gcc/${CHOST}/lib
  fi
  # install -d ${pkgdir}/usr/share/gdb/auto-load/usr/lib
  # mv $pkg{pkgdir}dir{,/usr/share/gdb/auto-load}/usr/lib/libstdc++.so.6.0.18-gdb.py

  # unfortunately it is much, much easier to install the lot and clean-up the mess...
  rm ${pkgdir}/usr/bin/{$CHOST-,}gfortran
  # remove all DLLs
  rm -f ${pkgdir}/usr/bin/*.dll

  rm -f ${pkgdir}/usr/lib/libiberty.a
  # rm -f ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver}/libatomic{.dll,}.a
  rm -f ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver}/libgfortran{.dll,}.a
  rm -f ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver}/libgfortran.spec
  rm -r ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/finclude
  rm -f ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/f951.exe
  rm -f ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/{libcaf_single,libgfortranbegin}.a
  rm -f ${pkgdir}/usr/share/info/{gfortran,libgomp,libquadmath}.info
  rm -f ${pkgdir}/usr/share/locale/{de,fr}/LC_MESSAGES/libstdc++.mo
  rm -f ${pkgdir}/usr/share/man/man1/gfortran.1

  # remove static libraries - note libstdc++.a is needed for the binutils and glibc testsuite
  #rm ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver}/lib{gomp,quadmath}{.dll,}.a

  # many packages expect this symlinks
  ln -s gcc ${pkgdir}/usr/bin/cc
  cp -f ${pkgdir}/usr/bin/cpp.exe ${pkgdir}/usr/lib/cpp

  # POSIX conformance launcher scripts for c89 and c99
  cat > $pkgdir/usr/bin/c89 <<"EOF"
#!/bin/sh
fl="-std=c89"
for opt; do
  case "\$opt" in
    -ansi|-std=c89|-std=iso9899:1990) fl="";;
    -std=*) echo "`basename \$0` called with non ANSI/ISO C option \$opt" >&2
	    exit 1;;
  esac
done
exec /usr/bin/gcc \$fl \${1+"\$@"}
EOF

  cat > ${pkgdir}/usr/bin/c99 <<"EOF"
#!/bin/sh
fl="-std=c99"
for opt; do
  case "\$opt" in
    -std=c99|-std=iso9899:1999) fl="";;
    -std=*) echo "`basename \$0` called with non ISO C99 option \$opt" >&2
	    exit 1;;
  esac
done
exec /usr/bin/gcc \$fl \${1+"\$@"}
EOF

  chmod 755 ${pkgdir}/usr/bin/c{8,9}9

  # install the libstdc++ man pages
  # install -dm755 ${pkgdir}/usr/share/man/man3
  # install -m644 -t ${pkgdir}/usr/share/man/man3 \
  #  ${CHOST}/libstdc++-v3/doc/doxygen/man/man3/*.3

  # Install Runtime Library Exception
  install -Dm644 ${srcdir}/gcc-${pkgver}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc-fortran()
{
  pkgdesc="Fortran front-end for GCC"
  depends=("gcc=$pkgver-$pkgrel")
  options=('staticlibs' '!emptydirs' "$STRIP_OPTION" "$DEBUG_OPTION")
  install=gcc-fortran.install

  cd ${srcdir}/build-$(arch)

  if check_option "strip" "n"; then
    export STRIP=true
  fi

  make -j1 DESTDIR=${pkgdir} install-target-libgfortran
  make -j1 -C $CHOST/libgomp DESTDIR=${pkgdir} install-nodist_fincludeHEADERS
  make -j1 -C gcc DESTDIR=${pkgdir} fortran.install-{common,man,info}
  install -Dm755 gcc/f951 ${pkgdir}/usr/lib/gcc/$CHOST/$pkgver/f951

  ln -s gfortran ${pkgdir}/usr/bin/f95

  rm -f ${pkgdir}/usr/lib/gcc/${CHOST}/lib/libgcc_s.dll.a
  # remove files included in gcc-libs or gcc and unnneeded static lib
  rm ${pkgdir}/usr/bin/*.dll
  rm ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/libquadmath.{dll.a,a}
  rm ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/{*.o,libgc*}
  rm ${pkgdir}/usr/share/info/libquadmath.info
  rm -r ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/include
  # rm ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/libgfortran.a

  # Install Runtime Library Exception
  install -Dm644 ${srcdir}/gcc-${pkgver}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc-fortran/RUNTIME.LIBRARY.EXCEPTION
}
